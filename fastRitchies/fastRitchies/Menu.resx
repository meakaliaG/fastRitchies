<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainsButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>